/* 
 * assembly.education
 *
 * Developer API for assembly.education.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: help@assembly.education
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = AssemblyClient.Client.SwaggerDateConverter;

namespace AssemblyClient.Model
{
    /// <summary>
    /// A student&#39;s SEN Need information.
    /// </summary>
    [DataContract]
    public partial class StudentDemographicsSenNeeds :  IEquatable<StudentDemographicsSenNeeds>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StudentDemographicsSenNeeds" /> class.
        /// </summary>
        /// <param name="_object">Object type.</param>
        /// <param name="id">The id of the sen need.</param>
        /// <param name="startDate">The start date for the need.</param>
        /// <param name="senNeedCode">The code of the sen need.</param>
        /// <param name="senNeedName">The name of the sen need.</param>
        /// <param name="senBroadNeedTypeCode">The code for the broad need.</param>
        /// <param name="senBroadNeedTypeName">The name of the broad need.</param>
        /// <param name="priority">The priority of the sen need.</param>
        public StudentDemographicsSenNeeds(string _object = default(string), int? id = default(int?), DateTime? startDate = default(DateTime?), string senNeedCode = default(string), string senNeedName = default(string), string senBroadNeedTypeCode = default(string), string senBroadNeedTypeName = default(string), int? priority = default(int?))
        {
            this._object = _object;
            this.id = id;
            this.start_date = startDate;
            this.sen_need_code = senNeedCode;
            this.sen_need_name = senNeedName;
            this.sen_broad_need_type_code = senBroadNeedTypeCode;
            this.sen_broad_need_type_name = senBroadNeedTypeName;
            this.priority = priority;
        }
        
        /// <summary>
        /// Object type
        /// </summary>
        /// <value>Object type</value>
        [DataMember(Name="object", EmitDefaultValue=false)]
        public string _object { get; set; }

        /// <summary>
        /// The id of the sen need
        /// </summary>
        /// <value>The id of the sen need</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? id { get; set; }

        /// <summary>
        /// The start date for the need
        /// </summary>
        /// <value>The start date for the need</value>
        [DataMember(Name="start_date", EmitDefaultValue=false)]
        public DateTime? start_date { get; set; }

        /// <summary>
        /// The code of the sen need
        /// </summary>
        /// <value>The code of the sen need</value>
        [DataMember(Name="sen_need_code", EmitDefaultValue=false)]
        public string sen_need_code { get; set; }

        /// <summary>
        /// The name of the sen need
        /// </summary>
        /// <value>The name of the sen need</value>
        [DataMember(Name="sen_need_name", EmitDefaultValue=false)]
        public string sen_need_name { get; set; }

        /// <summary>
        /// The code for the broad need
        /// </summary>
        /// <value>The code for the broad need</value>
        [DataMember(Name="sen_broad_need_type_code", EmitDefaultValue=false)]
        public string sen_broad_need_type_code { get; set; }

        /// <summary>
        /// The name of the broad need
        /// </summary>
        /// <value>The name of the broad need</value>
        [DataMember(Name="sen_broad_need_type_name", EmitDefaultValue=false)]
        public string sen_broad_need_type_name { get; set; }

        /// <summary>
        /// The priority of the sen need
        /// </summary>
        /// <value>The priority of the sen need</value>
        [DataMember(Name="priority", EmitDefaultValue=false)]
        public int? priority { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StudentDemographicsSenNeeds {\n");
            sb.Append("  _object: ").Append(_object).Append("\n");
            sb.Append("  id: ").Append(id).Append("\n");
            sb.Append("  start_date: ").Append(start_date).Append("\n");
            sb.Append("  sen_need_code: ").Append(sen_need_code).Append("\n");
            sb.Append("  sen_need_name: ").Append(sen_need_name).Append("\n");
            sb.Append("  sen_broad_need_type_code: ").Append(sen_broad_need_type_code).Append("\n");
            sb.Append("  sen_broad_need_type_name: ").Append(sen_broad_need_type_name).Append("\n");
            sb.Append("  priority: ").Append(priority).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StudentDemographicsSenNeeds);
        }

        /// <summary>
        /// Returns true if StudentDemographicsSenNeeds instances are equal
        /// </summary>
        /// <param name="input">Instance of StudentDemographicsSenNeeds to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StudentDemographicsSenNeeds input)
        {
            if (input == null)
                return false;

            return 
                (
                    this._object == input._object ||
                    (this._object != null &&
                    this._object.Equals(input._object))
                ) && 
                (
                    this.id == input.id ||
                    (this.id != null &&
                    this.id.Equals(input.id))
                ) && 
                (
                    this.start_date == input.start_date ||
                    (this.start_date != null &&
                    this.start_date.Equals(input.start_date))
                ) && 
                (
                    this.sen_need_code == input.sen_need_code ||
                    (this.sen_need_code != null &&
                    this.sen_need_code.Equals(input.sen_need_code))
                ) && 
                (
                    this.sen_need_name == input.sen_need_name ||
                    (this.sen_need_name != null &&
                    this.sen_need_name.Equals(input.sen_need_name))
                ) && 
                (
                    this.sen_broad_need_type_code == input.sen_broad_need_type_code ||
                    (this.sen_broad_need_type_code != null &&
                    this.sen_broad_need_type_code.Equals(input.sen_broad_need_type_code))
                ) && 
                (
                    this.sen_broad_need_type_name == input.sen_broad_need_type_name ||
                    (this.sen_broad_need_type_name != null &&
                    this.sen_broad_need_type_name.Equals(input.sen_broad_need_type_name))
                ) && 
                (
                    this.priority == input.priority ||
                    (this.priority != null &&
                    this.priority.Equals(input.priority))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this._object != null)
                    hashCode = hashCode * 59 + this._object.GetHashCode();
                if (this.id != null)
                    hashCode = hashCode * 59 + this.id.GetHashCode();
                if (this.start_date != null)
                    hashCode = hashCode * 59 + this.start_date.GetHashCode();
                if (this.sen_need_code != null)
                    hashCode = hashCode * 59 + this.sen_need_code.GetHashCode();
                if (this.sen_need_name != null)
                    hashCode = hashCode * 59 + this.sen_need_name.GetHashCode();
                if (this.sen_broad_need_type_code != null)
                    hashCode = hashCode * 59 + this.sen_broad_need_type_code.GetHashCode();
                if (this.sen_broad_need_type_name != null)
                    hashCode = hashCode * 59 + this.sen_broad_need_type_name.GetHashCode();
                if (this.priority != null)
                    hashCode = hashCode * 59 + this.priority.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
