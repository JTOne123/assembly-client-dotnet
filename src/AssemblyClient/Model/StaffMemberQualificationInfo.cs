/* 
 * assembly.education
 *
 * Developer API for assembly.education.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: help@assembly.education
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = AssemblyClient.Client.SwaggerDateConverter;

namespace AssemblyClient.Model
{
    /// <summary>
    /// Information about staff member qualifications
    /// </summary>
    [DataContract]
    public partial class StaffMemberQualificationInfo :  IEquatable<StaffMemberQualificationInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StaffMemberQualificationInfo" /> class.
        /// </summary>
        /// <param name="_object">Object type.</param>
        /// <param name="teacherNumber">The DfE Teacher Reference number (also known as GTC number). For members of staff who have one this is a unique identifier.</param>
        /// <param name="qtStatus">Whether or not the staff member holds Qualified Teacher Status.</param>
        /// <param name="hltaStatus">Whether or not the staff member holds Higher Level Teaching Assistant Status.</param>
        /// <param name="qtsRoute">The route by which a teacher obtains Qualified Teacher Status (e.g. the Graduate Teacher programme)..</param>
        /// <param name="qualifications">A list of all qualifications/degrees completed by a staff member.</param>
        public StaffMemberQualificationInfo(string _object = default(string), string teacherNumber = default(string), bool? qtStatus = default(bool?), bool? hltaStatus = default(bool?), string qtsRoute = default(string), List<StaffMemberQualificationInfoQualifications> qualifications = default(List<StaffMemberQualificationInfoQualifications>))
        {
            this._object = _object;
            this.teacher_number = teacherNumber;
            this.qt_status = qtStatus;
            this.hlta_status = hltaStatus;
            this.qts_route = qtsRoute;
            this.qualifications = qualifications;
        }
        
        /// <summary>
        /// Object type
        /// </summary>
        /// <value>Object type</value>
        [DataMember(Name="object", EmitDefaultValue=false)]
        public string _object { get; set; }

        /// <summary>
        /// The DfE Teacher Reference number (also known as GTC number). For members of staff who have one this is a unique identifier
        /// </summary>
        /// <value>The DfE Teacher Reference number (also known as GTC number). For members of staff who have one this is a unique identifier</value>
        [DataMember(Name="teacher_number", EmitDefaultValue=false)]
        public string teacher_number { get; set; }

        /// <summary>
        /// Whether or not the staff member holds Qualified Teacher Status
        /// </summary>
        /// <value>Whether or not the staff member holds Qualified Teacher Status</value>
        [DataMember(Name="qt_status", EmitDefaultValue=false)]
        public bool? qt_status { get; set; }

        /// <summary>
        /// Whether or not the staff member holds Higher Level Teaching Assistant Status
        /// </summary>
        /// <value>Whether or not the staff member holds Higher Level Teaching Assistant Status</value>
        [DataMember(Name="hlta_status", EmitDefaultValue=false)]
        public bool? hlta_status { get; set; }

        /// <summary>
        /// The route by which a teacher obtains Qualified Teacher Status (e.g. the Graduate Teacher programme).
        /// </summary>
        /// <value>The route by which a teacher obtains Qualified Teacher Status (e.g. the Graduate Teacher programme).</value>
        [DataMember(Name="qts_route", EmitDefaultValue=false)]
        public string qts_route { get; set; }

        /// <summary>
        /// A list of all qualifications/degrees completed by a staff member
        /// </summary>
        /// <value>A list of all qualifications/degrees completed by a staff member</value>
        [DataMember(Name="qualifications", EmitDefaultValue=false)]
        public List<StaffMemberQualificationInfoQualifications> qualifications { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StaffMemberQualificationInfo {\n");
            sb.Append("  _object: ").Append(_object).Append("\n");
            sb.Append("  teacher_number: ").Append(teacher_number).Append("\n");
            sb.Append("  qt_status: ").Append(qt_status).Append("\n");
            sb.Append("  hlta_status: ").Append(hlta_status).Append("\n");
            sb.Append("  qts_route: ").Append(qts_route).Append("\n");
            sb.Append("  qualifications: ").Append(qualifications).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StaffMemberQualificationInfo);
        }

        /// <summary>
        /// Returns true if StaffMemberQualificationInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of StaffMemberQualificationInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StaffMemberQualificationInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this._object == input._object ||
                    (this._object != null &&
                    this._object.Equals(input._object))
                ) && 
                (
                    this.teacher_number == input.teacher_number ||
                    (this.teacher_number != null &&
                    this.teacher_number.Equals(input.teacher_number))
                ) && 
                (
                    this.qt_status == input.qt_status ||
                    (this.qt_status != null &&
                    this.qt_status.Equals(input.qt_status))
                ) && 
                (
                    this.hlta_status == input.hlta_status ||
                    (this.hlta_status != null &&
                    this.hlta_status.Equals(input.hlta_status))
                ) && 
                (
                    this.qts_route == input.qts_route ||
                    (this.qts_route != null &&
                    this.qts_route.Equals(input.qts_route))
                ) && 
                (
                    this.qualifications == input.qualifications ||
                    this.qualifications != null &&
                    this.qualifications.SequenceEqual(input.qualifications)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this._object != null)
                    hashCode = hashCode * 59 + this._object.GetHashCode();
                if (this.teacher_number != null)
                    hashCode = hashCode * 59 + this.teacher_number.GetHashCode();
                if (this.qt_status != null)
                    hashCode = hashCode * 59 + this.qt_status.GetHashCode();
                if (this.hlta_status != null)
                    hashCode = hashCode * 59 + this.hlta_status.GetHashCode();
                if (this.qts_route != null)
                    hashCode = hashCode * 59 + this.qts_route.GetHashCode();
                if (this.qualifications != null)
                    hashCode = hashCode * 59 + this.qualifications.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
