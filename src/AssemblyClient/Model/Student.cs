/* 
 * Assembly Developer API
 *
 * The Assembly API is built around the REST and a collection of open standards/protocols in order to comply with as many consumers as possible.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: help@assembly.education
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AssemblyClient.Client.OpenAPIDateConverter;

namespace AssemblyClient.Model
{
    /// <summary>
    /// Student
    /// </summary>
    [DataContract]
    public partial class Student :  IEquatable<Student>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Student" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="yearCode">yearCode.</param>
        /// <param name="upn">upn.</param>
        /// <param name="formerUpn">formerUpn.</param>
        /// <param name="misId">misId.</param>
        /// <param name="pan">pan.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="legalFirstName">legalFirstName.</param>
        /// <param name="middleName">middleName.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="legalLastName">legalLastName.</param>
        /// <param name="formerLastName">formerLastName.</param>
        /// <param name="dob">dob.</param>
        /// <param name="startDate">startDate.</param>
        /// <param name="endDate">endDate.</param>
        /// <param name="enrolmentStatus">enrolmentStatus.</param>
        public Student(int? id = default(int?), string yearCode = default(string), string upn = default(string), string formerUpn = default(string), string misId = default(string), string pan = default(string), string firstName = default(string), string legalFirstName = default(string), string middleName = default(string), string lastName = default(string), string legalLastName = default(string), string formerLastName = default(string), DateTime? dob = default(DateTime?), DateTime? startDate = default(DateTime?), DateTime? endDate = default(DateTime?), string enrolmentStatus = default(string))
        {
            this.Id = id;
            this.YearCode = yearCode;
            this.Upn = upn;
            this.FormerUpn = formerUpn;
            this.MisId = misId;
            this.Pan = pan;
            this.FirstName = firstName;
            this.LegalFirstName = legalFirstName;
            this.MiddleName = middleName;
            this.LastName = lastName;
            this.LegalLastName = legalLastName;
            this.FormerLastName = formerLastName;
            this.Dob = dob;
            this.StartDate = startDate;
            this.EndDate = endDate;
            this.EnrolmentStatus = enrolmentStatus;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or Sets YearCode
        /// </summary>
        [DataMember(Name="year_code", EmitDefaultValue=false)]
        public string YearCode { get; set; }

        /// <summary>
        /// Gets or Sets Upn
        /// </summary>
        [DataMember(Name="upn", EmitDefaultValue=false)]
        public string Upn { get; set; }

        /// <summary>
        /// Gets or Sets FormerUpn
        /// </summary>
        [DataMember(Name="former_upn", EmitDefaultValue=false)]
        public string FormerUpn { get; set; }

        /// <summary>
        /// Gets or Sets MisId
        /// </summary>
        [DataMember(Name="mis_id", EmitDefaultValue=false)]
        public string MisId { get; set; }

        /// <summary>
        /// Gets or Sets Pan
        /// </summary>
        [DataMember(Name="pan", EmitDefaultValue=false)]
        public string Pan { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="first_name", EmitDefaultValue=false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets LegalFirstName
        /// </summary>
        [DataMember(Name="legal_first_name", EmitDefaultValue=false)]
        public string LegalFirstName { get; set; }

        /// <summary>
        /// Gets or Sets MiddleName
        /// </summary>
        [DataMember(Name="middle_name", EmitDefaultValue=false)]
        public string MiddleName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="last_name", EmitDefaultValue=false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets LegalLastName
        /// </summary>
        [DataMember(Name="legal_last_name", EmitDefaultValue=false)]
        public string LegalLastName { get; set; }

        /// <summary>
        /// Gets or Sets FormerLastName
        /// </summary>
        [DataMember(Name="former_last_name", EmitDefaultValue=false)]
        public string FormerLastName { get; set; }

        /// <summary>
        /// Gets or Sets Dob
        /// </summary>
        [DataMember(Name="dob", EmitDefaultValue=false)]
        public DateTime? Dob { get; set; }

        /// <summary>
        /// Gets or Sets StartDate
        /// </summary>
        [DataMember(Name="start_date", EmitDefaultValue=false)]
        public DateTime? StartDate { get; set; }

        /// <summary>
        /// Gets or Sets EndDate
        /// </summary>
        [DataMember(Name="end_date", EmitDefaultValue=false)]
        public DateTime? EndDate { get; set; }

        /// <summary>
        /// Gets or Sets EnrolmentStatus
        /// </summary>
        [DataMember(Name="enrolment_status", EmitDefaultValue=false)]
        public string EnrolmentStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Student {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  YearCode: ").Append(YearCode).Append("\n");
            sb.Append("  Upn: ").Append(Upn).Append("\n");
            sb.Append("  FormerUpn: ").Append(FormerUpn).Append("\n");
            sb.Append("  MisId: ").Append(MisId).Append("\n");
            sb.Append("  Pan: ").Append(Pan).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LegalFirstName: ").Append(LegalFirstName).Append("\n");
            sb.Append("  MiddleName: ").Append(MiddleName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  LegalLastName: ").Append(LegalLastName).Append("\n");
            sb.Append("  FormerLastName: ").Append(FormerLastName).Append("\n");
            sb.Append("  Dob: ").Append(Dob).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  EnrolmentStatus: ").Append(EnrolmentStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Student);
        }

        /// <summary>
        /// Returns true if Student instances are equal
        /// </summary>
        /// <param name="input">Instance of Student to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Student input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.YearCode == input.YearCode ||
                    (this.YearCode != null &&
                    this.YearCode.Equals(input.YearCode))
                ) && 
                (
                    this.Upn == input.Upn ||
                    (this.Upn != null &&
                    this.Upn.Equals(input.Upn))
                ) && 
                (
                    this.FormerUpn == input.FormerUpn ||
                    (this.FormerUpn != null &&
                    this.FormerUpn.Equals(input.FormerUpn))
                ) && 
                (
                    this.MisId == input.MisId ||
                    (this.MisId != null &&
                    this.MisId.Equals(input.MisId))
                ) && 
                (
                    this.Pan == input.Pan ||
                    (this.Pan != null &&
                    this.Pan.Equals(input.Pan))
                ) && 
                (
                    this.FirstName == input.FirstName ||
                    (this.FirstName != null &&
                    this.FirstName.Equals(input.FirstName))
                ) && 
                (
                    this.LegalFirstName == input.LegalFirstName ||
                    (this.LegalFirstName != null &&
                    this.LegalFirstName.Equals(input.LegalFirstName))
                ) && 
                (
                    this.MiddleName == input.MiddleName ||
                    (this.MiddleName != null &&
                    this.MiddleName.Equals(input.MiddleName))
                ) && 
                (
                    this.LastName == input.LastName ||
                    (this.LastName != null &&
                    this.LastName.Equals(input.LastName))
                ) && 
                (
                    this.LegalLastName == input.LegalLastName ||
                    (this.LegalLastName != null &&
                    this.LegalLastName.Equals(input.LegalLastName))
                ) && 
                (
                    this.FormerLastName == input.FormerLastName ||
                    (this.FormerLastName != null &&
                    this.FormerLastName.Equals(input.FormerLastName))
                ) && 
                (
                    this.Dob == input.Dob ||
                    (this.Dob != null &&
                    this.Dob.Equals(input.Dob))
                ) && 
                (
                    this.StartDate == input.StartDate ||
                    (this.StartDate != null &&
                    this.StartDate.Equals(input.StartDate))
                ) && 
                (
                    this.EndDate == input.EndDate ||
                    (this.EndDate != null &&
                    this.EndDate.Equals(input.EndDate))
                ) && 
                (
                    this.EnrolmentStatus == input.EnrolmentStatus ||
                    (this.EnrolmentStatus != null &&
                    this.EnrolmentStatus.Equals(input.EnrolmentStatus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.YearCode != null)
                    hashCode = hashCode * 59 + this.YearCode.GetHashCode();
                if (this.Upn != null)
                    hashCode = hashCode * 59 + this.Upn.GetHashCode();
                if (this.FormerUpn != null)
                    hashCode = hashCode * 59 + this.FormerUpn.GetHashCode();
                if (this.MisId != null)
                    hashCode = hashCode * 59 + this.MisId.GetHashCode();
                if (this.Pan != null)
                    hashCode = hashCode * 59 + this.Pan.GetHashCode();
                if (this.FirstName != null)
                    hashCode = hashCode * 59 + this.FirstName.GetHashCode();
                if (this.LegalFirstName != null)
                    hashCode = hashCode * 59 + this.LegalFirstName.GetHashCode();
                if (this.MiddleName != null)
                    hashCode = hashCode * 59 + this.MiddleName.GetHashCode();
                if (this.LastName != null)
                    hashCode = hashCode * 59 + this.LastName.GetHashCode();
                if (this.LegalLastName != null)
                    hashCode = hashCode * 59 + this.LegalLastName.GetHashCode();
                if (this.FormerLastName != null)
                    hashCode = hashCode * 59 + this.FormerLastName.GetHashCode();
                if (this.Dob != null)
                    hashCode = hashCode * 59 + this.Dob.GetHashCode();
                if (this.StartDate != null)
                    hashCode = hashCode * 59 + this.StartDate.GetHashCode();
                if (this.EndDate != null)
                    hashCode = hashCode * 59 + this.EndDate.GetHashCode();
                if (this.EnrolmentStatus != null)
                    hashCode = hashCode * 59 + this.EnrolmentStatus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
