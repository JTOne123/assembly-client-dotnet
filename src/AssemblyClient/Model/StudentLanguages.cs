/* 
 * assembly.education
 *
 * Developer API for assembly.education.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: help@assembly.education
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = AssemblyClient.Client.SwaggerDateConverter;

namespace AssemblyClient.Model
{
    /// <summary>
    /// A student&#39;s language information.
    /// </summary>
    [DataContract]
    public partial class StudentLanguages :  IEquatable<StudentLanguages>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StudentLanguages" /> class.
        /// </summary>
        /// <param name="_object">Object type.</param>
        /// <param name="homeLanguageCode">The code of a student&#39;s home language.</param>
        /// <param name="homeLanguageName">The name of a student&#39;s home language.</param>
        /// <param name="firstLanguageCode">The code of a student&#39;s first language.</param>
        /// <param name="firstLanguageName">The name of a student&#39;s first language.</param>
        /// <param name="proficiencyInEnglishCode">A student&#39;s proficiency in English code.</param>
        /// <param name="proficiencyInEnglishName">A student&#39;s proficiency in English name.</param>
        public StudentLanguages(string _object = default(string), string homeLanguageCode = default(string), string homeLanguageName = default(string), string firstLanguageCode = default(string), string firstLanguageName = default(string), string proficiencyInEnglishCode = default(string), string proficiencyInEnglishName = default(string))
        {
            this._object = _object;
            this.home_language_code = homeLanguageCode;
            this.home_language_name = homeLanguageName;
            this.first_language_code = firstLanguageCode;
            this.first_language_name = firstLanguageName;
            this.proficiency_in_english_code = proficiencyInEnglishCode;
            this.proficiency_in_english_name = proficiencyInEnglishName;
        }
        
        /// <summary>
        /// Object type
        /// </summary>
        /// <value>Object type</value>
        [DataMember(Name="object", EmitDefaultValue=false)]
        public string _object { get; set; }

        /// <summary>
        /// The code of a student&#39;s home language
        /// </summary>
        /// <value>The code of a student&#39;s home language</value>
        [DataMember(Name="home_language_code", EmitDefaultValue=false)]
        public string home_language_code { get; set; }

        /// <summary>
        /// The name of a student&#39;s home language
        /// </summary>
        /// <value>The name of a student&#39;s home language</value>
        [DataMember(Name="home_language_name", EmitDefaultValue=false)]
        public string home_language_name { get; set; }

        /// <summary>
        /// The code of a student&#39;s first language
        /// </summary>
        /// <value>The code of a student&#39;s first language</value>
        [DataMember(Name="first_language_code", EmitDefaultValue=false)]
        public string first_language_code { get; set; }

        /// <summary>
        /// The name of a student&#39;s first language
        /// </summary>
        /// <value>The name of a student&#39;s first language</value>
        [DataMember(Name="first_language_name", EmitDefaultValue=false)]
        public string first_language_name { get; set; }

        /// <summary>
        /// A student&#39;s proficiency in English code
        /// </summary>
        /// <value>A student&#39;s proficiency in English code</value>
        [DataMember(Name="proficiency_in_english_code", EmitDefaultValue=false)]
        public string proficiency_in_english_code { get; set; }

        /// <summary>
        /// A student&#39;s proficiency in English name
        /// </summary>
        /// <value>A student&#39;s proficiency in English name</value>
        [DataMember(Name="proficiency_in_english_name", EmitDefaultValue=false)]
        public string proficiency_in_english_name { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StudentLanguages {\n");
            sb.Append("  _object: ").Append(_object).Append("\n");
            sb.Append("  home_language_code: ").Append(home_language_code).Append("\n");
            sb.Append("  home_language_name: ").Append(home_language_name).Append("\n");
            sb.Append("  first_language_code: ").Append(first_language_code).Append("\n");
            sb.Append("  first_language_name: ").Append(first_language_name).Append("\n");
            sb.Append("  proficiency_in_english_code: ").Append(proficiency_in_english_code).Append("\n");
            sb.Append("  proficiency_in_english_name: ").Append(proficiency_in_english_name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StudentLanguages);
        }

        /// <summary>
        /// Returns true if StudentLanguages instances are equal
        /// </summary>
        /// <param name="input">Instance of StudentLanguages to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StudentLanguages input)
        {
            if (input == null)
                return false;

            return 
                (
                    this._object == input._object ||
                    (this._object != null &&
                    this._object.Equals(input._object))
                ) && 
                (
                    this.home_language_code == input.home_language_code ||
                    (this.home_language_code != null &&
                    this.home_language_code.Equals(input.home_language_code))
                ) && 
                (
                    this.home_language_name == input.home_language_name ||
                    (this.home_language_name != null &&
                    this.home_language_name.Equals(input.home_language_name))
                ) && 
                (
                    this.first_language_code == input.first_language_code ||
                    (this.first_language_code != null &&
                    this.first_language_code.Equals(input.first_language_code))
                ) && 
                (
                    this.first_language_name == input.first_language_name ||
                    (this.first_language_name != null &&
                    this.first_language_name.Equals(input.first_language_name))
                ) && 
                (
                    this.proficiency_in_english_code == input.proficiency_in_english_code ||
                    (this.proficiency_in_english_code != null &&
                    this.proficiency_in_english_code.Equals(input.proficiency_in_english_code))
                ) && 
                (
                    this.proficiency_in_english_name == input.proficiency_in_english_name ||
                    (this.proficiency_in_english_name != null &&
                    this.proficiency_in_english_name.Equals(input.proficiency_in_english_name))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this._object != null)
                    hashCode = hashCode * 59 + this._object.GetHashCode();
                if (this.home_language_code != null)
                    hashCode = hashCode * 59 + this.home_language_code.GetHashCode();
                if (this.home_language_name != null)
                    hashCode = hashCode * 59 + this.home_language_name.GetHashCode();
                if (this.first_language_code != null)
                    hashCode = hashCode * 59 + this.first_language_code.GetHashCode();
                if (this.first_language_name != null)
                    hashCode = hashCode * 59 + this.first_language_name.GetHashCode();
                if (this.proficiency_in_english_code != null)
                    hashCode = hashCode * 59 + this.proficiency_in_english_code.GetHashCode();
                if (this.proficiency_in_english_name != null)
                    hashCode = hashCode * 59 + this.proficiency_in_english_name.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
