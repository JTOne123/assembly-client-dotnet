/* 
 * assembly.education
 *
 * Developer API for assembly.education.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: help@assembly.education
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = AssemblyClient.Client.SwaggerDateConverter;

namespace AssemblyClient.Model
{
    /// <summary>
    /// A staff member object represents a single staff member within a school.
    /// </summary>
    [DataContract]
    public partial class StaffMemberListData :  IEquatable<StaffMemberListData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StaffMemberListData" /> class.
        /// </summary>
        /// <param name="_object">Object type.</param>
        /// <param name="id">Internal stable ID given to each staff member in the Platform.</param>
        /// <param name="misId">The ID of the staff member from the MIS.</param>
        /// <param name="staffCode">The staff code from the MIS.</param>
        /// <param name="firstName">The first name of the staff member.</param>
        /// <param name="legalFirstName">The legal first name of the staff member.</param>
        /// <param name="middleName">The middle name of the staff member.</param>
        /// <param name="lastName">The last name of the staff member.</param>
        /// <param name="legalLastName">The legal last name of the staff member.</param>
        /// <param name="formerLastName">The former last name of the staff member.</param>
        /// <param name="dob">The staff member&#39;s date of birth.</param>
        /// <param name="title">The title of the staff member.</param>
        /// <param name="email">The email address of the staff member..</param>
        /// <param name="isTeachingStaff">Indicates whether the staff member is a teacher.</param>
        /// <param name="includedInCensus">Indicates whether the staff member is a teacher.</param>
        /// <param name="startDate">When the staff member&#39;s employment started.</param>
        /// <param name="endDate">When the staff member&#39;s employment ended/is due to end.</param>
        /// <param name="demographics">demographics.</param>
        /// <param name="qualificationInfo">qualificationInfo.</param>
        public StaffMemberListData(string _object = default(string), int? id = default(int?), string misId = default(string), string staffCode = default(string), string firstName = default(string), string legalFirstName = default(string), string middleName = default(string), string lastName = default(string), string legalLastName = default(string), string formerLastName = default(string), string dob = default(string), string title = default(string), string email = default(string), bool? isTeachingStaff = default(bool?), bool? includedInCensus = default(bool?), DateTime? startDate = default(DateTime?), DateTime? endDate = default(DateTime?), StaffMemberDemographics demographics = default(StaffMemberDemographics), StaffMemberQualificationInfo qualificationInfo = default(StaffMemberQualificationInfo))
        {
            this._object = _object;
            this.id = id;
            this.mis_id = misId;
            this.staff_code = staffCode;
            this.first_name = firstName;
            this.legal_first_name = legalFirstName;
            this.middle_name = middleName;
            this.last_name = lastName;
            this.legal_last_name = legalLastName;
            this.former_last_name = formerLastName;
            this.dob = dob;
            this.title = title;
            this.email = email;
            this.is_teaching_staff = isTeachingStaff;
            this.included_in_census = includedInCensus;
            this.start_date = startDate;
            this.end_date = endDate;
            this.demographics = demographics;
            this.qualification_info = qualificationInfo;
        }
        
        /// <summary>
        /// Object type
        /// </summary>
        /// <value>Object type</value>
        [DataMember(Name="object", EmitDefaultValue=false)]
        public string _object { get; set; }

        /// <summary>
        /// Internal stable ID given to each staff member in the Platform
        /// </summary>
        /// <value>Internal stable ID given to each staff member in the Platform</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? id { get; set; }

        /// <summary>
        /// The ID of the staff member from the MIS
        /// </summary>
        /// <value>The ID of the staff member from the MIS</value>
        [DataMember(Name="mis_id", EmitDefaultValue=false)]
        public string mis_id { get; set; }

        /// <summary>
        /// The staff code from the MIS
        /// </summary>
        /// <value>The staff code from the MIS</value>
        [DataMember(Name="staff_code", EmitDefaultValue=false)]
        public string staff_code { get; set; }

        /// <summary>
        /// The first name of the staff member
        /// </summary>
        /// <value>The first name of the staff member</value>
        [DataMember(Name="first_name", EmitDefaultValue=false)]
        public string first_name { get; set; }

        /// <summary>
        /// The legal first name of the staff member
        /// </summary>
        /// <value>The legal first name of the staff member</value>
        [DataMember(Name="legal_first_name", EmitDefaultValue=false)]
        public string legal_first_name { get; set; }

        /// <summary>
        /// The middle name of the staff member
        /// </summary>
        /// <value>The middle name of the staff member</value>
        [DataMember(Name="middle_name", EmitDefaultValue=false)]
        public string middle_name { get; set; }

        /// <summary>
        /// The last name of the staff member
        /// </summary>
        /// <value>The last name of the staff member</value>
        [DataMember(Name="last_name", EmitDefaultValue=false)]
        public string last_name { get; set; }

        /// <summary>
        /// The legal last name of the staff member
        /// </summary>
        /// <value>The legal last name of the staff member</value>
        [DataMember(Name="legal_last_name", EmitDefaultValue=false)]
        public string legal_last_name { get; set; }

        /// <summary>
        /// The former last name of the staff member
        /// </summary>
        /// <value>The former last name of the staff member</value>
        [DataMember(Name="former_last_name", EmitDefaultValue=false)]
        public string former_last_name { get; set; }

        /// <summary>
        /// The staff member&#39;s date of birth
        /// </summary>
        /// <value>The staff member&#39;s date of birth</value>
        [DataMember(Name="dob", EmitDefaultValue=false)]
        public string dob { get; set; }

        /// <summary>
        /// The title of the staff member
        /// </summary>
        /// <value>The title of the staff member</value>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string title { get; set; }

        /// <summary>
        /// The email address of the staff member.
        /// </summary>
        /// <value>The email address of the staff member.</value>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string email { get; set; }

        /// <summary>
        /// Indicates whether the staff member is a teacher
        /// </summary>
        /// <value>Indicates whether the staff member is a teacher</value>
        [DataMember(Name="is_teaching_staff", EmitDefaultValue=false)]
        public bool? is_teaching_staff { get; set; }

        /// <summary>
        /// Indicates whether the staff member is a teacher
        /// </summary>
        /// <value>Indicates whether the staff member is a teacher</value>
        [DataMember(Name="included_in_census", EmitDefaultValue=false)]
        public bool? included_in_census { get; set; }

        /// <summary>
        /// When the staff member&#39;s employment started
        /// </summary>
        /// <value>When the staff member&#39;s employment started</value>
        [DataMember(Name="start_date", EmitDefaultValue=false)]
        public DateTime? start_date { get; set; }

        /// <summary>
        /// When the staff member&#39;s employment ended/is due to end
        /// </summary>
        /// <value>When the staff member&#39;s employment ended/is due to end</value>
        [DataMember(Name="end_date", EmitDefaultValue=false)]
        public DateTime? end_date { get; set; }

        /// <summary>
        /// Gets or Sets demographics
        /// </summary>
        [DataMember(Name="demographics", EmitDefaultValue=false)]
        public StaffMemberDemographics demographics { get; set; }

        /// <summary>
        /// Gets or Sets qualification_info
        /// </summary>
        [DataMember(Name="qualification_info", EmitDefaultValue=false)]
        public StaffMemberQualificationInfo qualification_info { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StaffMemberListData {\n");
            sb.Append("  _object: ").Append(_object).Append("\n");
            sb.Append("  id: ").Append(id).Append("\n");
            sb.Append("  mis_id: ").Append(mis_id).Append("\n");
            sb.Append("  staff_code: ").Append(staff_code).Append("\n");
            sb.Append("  first_name: ").Append(first_name).Append("\n");
            sb.Append("  legal_first_name: ").Append(legal_first_name).Append("\n");
            sb.Append("  middle_name: ").Append(middle_name).Append("\n");
            sb.Append("  last_name: ").Append(last_name).Append("\n");
            sb.Append("  legal_last_name: ").Append(legal_last_name).Append("\n");
            sb.Append("  former_last_name: ").Append(former_last_name).Append("\n");
            sb.Append("  dob: ").Append(dob).Append("\n");
            sb.Append("  title: ").Append(title).Append("\n");
            sb.Append("  email: ").Append(email).Append("\n");
            sb.Append("  is_teaching_staff: ").Append(is_teaching_staff).Append("\n");
            sb.Append("  included_in_census: ").Append(included_in_census).Append("\n");
            sb.Append("  start_date: ").Append(start_date).Append("\n");
            sb.Append("  end_date: ").Append(end_date).Append("\n");
            sb.Append("  demographics: ").Append(demographics).Append("\n");
            sb.Append("  qualification_info: ").Append(qualification_info).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StaffMemberListData);
        }

        /// <summary>
        /// Returns true if StaffMemberListData instances are equal
        /// </summary>
        /// <param name="input">Instance of StaffMemberListData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StaffMemberListData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this._object == input._object ||
                    (this._object != null &&
                    this._object.Equals(input._object))
                ) && 
                (
                    this.id == input.id ||
                    (this.id != null &&
                    this.id.Equals(input.id))
                ) && 
                (
                    this.mis_id == input.mis_id ||
                    (this.mis_id != null &&
                    this.mis_id.Equals(input.mis_id))
                ) && 
                (
                    this.staff_code == input.staff_code ||
                    (this.staff_code != null &&
                    this.staff_code.Equals(input.staff_code))
                ) && 
                (
                    this.first_name == input.first_name ||
                    (this.first_name != null &&
                    this.first_name.Equals(input.first_name))
                ) && 
                (
                    this.legal_first_name == input.legal_first_name ||
                    (this.legal_first_name != null &&
                    this.legal_first_name.Equals(input.legal_first_name))
                ) && 
                (
                    this.middle_name == input.middle_name ||
                    (this.middle_name != null &&
                    this.middle_name.Equals(input.middle_name))
                ) && 
                (
                    this.last_name == input.last_name ||
                    (this.last_name != null &&
                    this.last_name.Equals(input.last_name))
                ) && 
                (
                    this.legal_last_name == input.legal_last_name ||
                    (this.legal_last_name != null &&
                    this.legal_last_name.Equals(input.legal_last_name))
                ) && 
                (
                    this.former_last_name == input.former_last_name ||
                    (this.former_last_name != null &&
                    this.former_last_name.Equals(input.former_last_name))
                ) && 
                (
                    this.dob == input.dob ||
                    (this.dob != null &&
                    this.dob.Equals(input.dob))
                ) && 
                (
                    this.title == input.title ||
                    (this.title != null &&
                    this.title.Equals(input.title))
                ) && 
                (
                    this.email == input.email ||
                    (this.email != null &&
                    this.email.Equals(input.email))
                ) && 
                (
                    this.is_teaching_staff == input.is_teaching_staff ||
                    (this.is_teaching_staff != null &&
                    this.is_teaching_staff.Equals(input.is_teaching_staff))
                ) && 
                (
                    this.included_in_census == input.included_in_census ||
                    (this.included_in_census != null &&
                    this.included_in_census.Equals(input.included_in_census))
                ) && 
                (
                    this.start_date == input.start_date ||
                    (this.start_date != null &&
                    this.start_date.Equals(input.start_date))
                ) && 
                (
                    this.end_date == input.end_date ||
                    (this.end_date != null &&
                    this.end_date.Equals(input.end_date))
                ) && 
                (
                    this.demographics == input.demographics ||
                    (this.demographics != null &&
                    this.demographics.Equals(input.demographics))
                ) && 
                (
                    this.qualification_info == input.qualification_info ||
                    (this.qualification_info != null &&
                    this.qualification_info.Equals(input.qualification_info))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this._object != null)
                    hashCode = hashCode * 59 + this._object.GetHashCode();
                if (this.id != null)
                    hashCode = hashCode * 59 + this.id.GetHashCode();
                if (this.mis_id != null)
                    hashCode = hashCode * 59 + this.mis_id.GetHashCode();
                if (this.staff_code != null)
                    hashCode = hashCode * 59 + this.staff_code.GetHashCode();
                if (this.first_name != null)
                    hashCode = hashCode * 59 + this.first_name.GetHashCode();
                if (this.legal_first_name != null)
                    hashCode = hashCode * 59 + this.legal_first_name.GetHashCode();
                if (this.middle_name != null)
                    hashCode = hashCode * 59 + this.middle_name.GetHashCode();
                if (this.last_name != null)
                    hashCode = hashCode * 59 + this.last_name.GetHashCode();
                if (this.legal_last_name != null)
                    hashCode = hashCode * 59 + this.legal_last_name.GetHashCode();
                if (this.former_last_name != null)
                    hashCode = hashCode * 59 + this.former_last_name.GetHashCode();
                if (this.dob != null)
                    hashCode = hashCode * 59 + this.dob.GetHashCode();
                if (this.title != null)
                    hashCode = hashCode * 59 + this.title.GetHashCode();
                if (this.email != null)
                    hashCode = hashCode * 59 + this.email.GetHashCode();
                if (this.is_teaching_staff != null)
                    hashCode = hashCode * 59 + this.is_teaching_staff.GetHashCode();
                if (this.included_in_census != null)
                    hashCode = hashCode * 59 + this.included_in_census.GetHashCode();
                if (this.start_date != null)
                    hashCode = hashCode * 59 + this.start_date.GetHashCode();
                if (this.end_date != null)
                    hashCode = hashCode * 59 + this.end_date.GetHashCode();
                if (this.demographics != null)
                    hashCode = hashCode * 59 + this.demographics.GetHashCode();
                if (this.qualification_info != null)
                    hashCode = hashCode * 59 + this.qualification_info.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
