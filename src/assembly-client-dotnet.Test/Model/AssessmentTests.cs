/* 
 * assembly.education
 *
 * Developer API for assembly.education.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: help@assembly.education
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using assembly-client-dotnet.Api;
using assembly-client-dotnet.Model;
using assembly-client-dotnet.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace assembly-client-dotnet.Test
{
    /// <summary>
    ///  Class for testing Assessment
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class AssessmentTests
    {
        // TODO uncomment below to declare an instance variable for Assessment
        //private Assessment instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Assessment
            //instance = new Assessment();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Assessment
        /// </summary>
        [Test]
        public void AssessmentInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Assessment
            //Assert.IsInstanceOfType<Assessment> (instance, "variable 'instance' is a Assessment");
        }


        /// <summary>
        /// Test the property 'Object'
        /// </summary>
        [Test]
        public void ObjectTest()
        {
            // TODO unit test for the property 'Object'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'FamilyId'
        /// </summary>
        [Test]
        public void FamilyIdTest()
        {
            // TODO unit test for the property 'FamilyId'
        }
        /// <summary>
        /// Test the property 'FamilyName'
        /// </summary>
        [Test]
        public void FamilyNameTest()
        {
            // TODO unit test for the property 'FamilyName'
        }
        /// <summary>
        /// Test the property 'MisMappings'
        /// </summary>
        [Test]
        public void MisMappingsTest()
        {
            // TODO unit test for the property 'MisMappings'
        }

    }

}
