/* 
 * assembly.education
 *
 * Developer API for assembly.education.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: help@assembly.education
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using assembly-client-dotnet.Client;
using assembly-client-dotnet.Api;
using assembly-client-dotnet.Model;

namespace assembly-client-dotnet.Test
{
    /// <summary>
    ///  Class for testing StaffMembersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class StaffMembersApiTests
    {
        private StaffMembersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new StaffMembersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of StaffMembersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' StaffMembersApi
            //Assert.IsInstanceOfType(typeof(StaffMembersApi), instance, "instance is a StaffMembersApi");
        }

        
        /// <summary>
        /// Test StaffAbsences
        /// </summary>
        [Test]
        public void StaffAbsencesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string startDate = null;
            //string endDate = null;
            //int? page = null;
            //int? perPage = null;
            //string ifModifiedSince = null;
            //var response = instance.StaffAbsences(startDate, endDate, page, perPage, ifModifiedSince);
            //Assert.IsInstanceOf<StaffAbsenceList> (response, "response is StaffAbsenceList");
        }
        
        /// <summary>
        /// Test StaffContracts
        /// </summary>
        [Test]
        public void StaffContractsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string date = null;
            //bool? roles = null;
            //bool? salaries = null;
            //bool? allowances = null;
            //int? page = null;
            //int? perPage = null;
            //string ifModifiedSince = null;
            //var response = instance.StaffContracts(date, roles, salaries, allowances, page, perPage, ifModifiedSince);
            //Assert.IsInstanceOf<StaffContractList> (response, "response is StaffContractList");
        }
        
        /// <summary>
        /// Test StaffContractsStaffMemberId
        /// </summary>
        [Test]
        public void StaffContractsStaffMemberIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string staffMemberId = null;
            //string date = null;
            //bool? roles = null;
            //bool? salaries = null;
            //bool? allowances = null;
            //int? page = null;
            //int? perPage = null;
            //string ifModifiedSince = null;
            //var response = instance.StaffContractsStaffMemberId(staffMemberId, date, roles, salaries, allowances, page, perPage, ifModifiedSince);
            //Assert.IsInstanceOf<StaffContractList> (response, "response is StaffContractList");
        }
        
        /// <summary>
        /// Test StaffMembers
        /// </summary>
        [Test]
        public void StaffMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? teachersOnly = null;
            //bool? demographics = null;
            //bool? qualifications = null;
            //int? page = null;
            //int? perPage = null;
            //string ifModifiedSince = null;
            //var response = instance.StaffMembers(teachersOnly, demographics, qualifications, page, perPage, ifModifiedSince);
            //Assert.IsInstanceOf<StaffMemberList> (response, "response is StaffMemberList");
        }
        
        /// <summary>
        /// Test StaffMembersStaffMemberId
        /// </summary>
        [Test]
        public void StaffMembersStaffMemberIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string staffMemberId = null;
            //bool? demographics = null;
            //bool? qualifications = null;
            //string ifModifiedSince = null;
            //var response = instance.StaffMembersStaffMemberId(staffMemberId, demographics, qualifications, ifModifiedSince);
            //Assert.IsInstanceOf<StaffMember> (response, "response is StaffMember");
        }
        
    }

}
